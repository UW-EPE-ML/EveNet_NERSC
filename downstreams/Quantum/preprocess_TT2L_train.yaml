max_neutrinos: 2

selections:
  aliases:
    n_lep: "INPUTS/Conditions/nLepton"
    n_bjet: "INPUTS/Conditions/nbJet"
    n_jet: "INPUTS/Conditions/nJet"

    is_lep: "INPUTS/Source/isLepton"
    is_bjet: "INPUTS/Source/btag"
    is_valid: "INPUTS/Source/MASK"

    pt: "INPUTS/Source/pt"

  selection_anchors:
    pT:
      lep: &lep_pT "np.min(np.where(is_lep.astype(bool), pt, np.inf), axis=-1) > 10"
      bjet: &bjet_pT "np.min(np.where(is_bjet.astype(bool), pt, np.inf), axis=-1) > 20"
      jet: &jet_pT "np.min(np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, np.inf), axis=-1) > 20"

    ordered_pT:
      lep1_pT_sel: &lep1_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 0) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 0, axis=-1)[:, 0] > 10)"
      lep2_pT_sel: &lep2_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 1) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 1, axis=-1)[:, 1] > 10)"
      lep3_pT_sel: &lep3_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 2) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 2, axis=-1)[:, 2] > 10)"
      lep4_pT_sel: &lep4_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 3) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 3, axis=-1)[:, 3] > 10)"

      bjet1_pT_sel: &bjet1_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 0) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 0, axis=-1)[:, 0] > 20)"
      bjet2_pT_sel: &bjet2_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 1) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 1, axis=-1)[:, 1] > 20)"
      bjet3_pT_sel: &bjet3_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 2) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 2, axis=-1)[:, 2] > 20)"
      bjet4_pT_sel: &bjet4_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 3) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 3, axis=-1)[:, 3] > 20)"

      jet1_pT_sel: &jet1_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 0) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 0, axis=-1)[:, 0] > 20)"
      jet2_pT_sel: &jet2_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 1) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 1, axis=-1)[:, 1] > 20)"
      jet3_pT_sel: &jet3_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 2) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 2, axis=-1)[:, 2] > 20)"
      jet4_pT_sel: &jet4_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 3) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 3, axis=-1)[:, 3] > 20)"
      jet6_pT_sel: &jet6_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 5) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 5, axis=-1)[:, 5] > 20)"

  selections:
    TT2L:
      - "n_lep >= 2"
      - "n_bjet >= 2"
      - *lep2_pT_sel
      - *bjet2_pT_sel

EXTRA:
  lhe:
    - W+
    - W-
    - b
    - b~
    - e+
    - e-
    - mu+
    - mu-
    - t
    - t~
    - nu(e)
    - nu(e)~
    - nu(mu)
    - nu(mu)~

process_info:
  default: configs_TT2L/process_info.yaml

  # overwrites
  # ...

event_info:
  default: configs_TT2L/event_info.yaml

  # overwrites
  # ...

resonance:
  default: configs_TT2L/resonance.yaml

  # overwrites
  # ...