platform:
  data_parquet_dir: "/pscratch/sd/a/avencast/Event_Level_Analysis/Pretrain_Parquet/HHML/train"
  number_of_workers: 1
  resources_per_worker: {
    "CPU": 30,
    "GPU": 1,
  }
  batch_size: 1024
  prefetch_batches: 2
  use_gpu: true

logger:
  wandb:
    project: "HHML"
    entity: "ytchou97-university-of-washington"
    run_name: &logger_name "scratch-ema-ds1p0"
    #  run_name: "scratch-ema-ds1p0-lr_half"
    tags: [ "NERSC", "HHML", "Neutrinos", "QE" ]
    simplified: false
  local:
    save_dir: "/global/cfs/cdirs/m2616/avencast/Event_Level_Analysis/playground/logs"
    name: *logger_name
    version: "hhml_scratch_ema_ds1p0"

options:
  default: configs/options.yaml

  Training:
    total_epochs: 300
    epochs: 300
#    total_epochs: 300
#    epochs: 300
    model_checkpoint_save_path: "/global/cfs/cdirs/m2616/avencast/Event_Level_Analysis/playground/checkpoints.hhml"
#    model_checkpoint_load_path: "/global/cfs/cdirs/m2616/avencast/Event_Level_Analysis/playground/checkpoints.hhml/last.ckpt"
    pretrain_model_load_path: null
#    pretrain_model_load_path: "/global/cfs/cdirs/m5019/Checkpoints/nominal.epoch9.ckpt"

    diffusion_every_n_epochs: 5 # how often to run diffusion
    diffusion_every_n_steps: 10 # how often to run diffusion inside the valid epoch
    eval_metrics_every_n_epochs: 1 # how often to run evaluation metrics

    learning_rate: &lr 0.00005
    learning_rate_body: &lr_body 0.00005
    weight_decay: &wd 0.01
    Components:
      GlobalEmbedding:
        learning_rate: *lr_body
        weight_decay: *wd
        optimizer_type: "AdamW"
      PET:
        learning_rate: *lr_body
        weight_decay: *wd
        optimizer_type: "AdamW"
      ObjectEncoder:
        learning_rate: *lr_body
        weight_decay: *wd
        optimizer_type: "AdamW"
      Classification:
        include: false
        include_cross_term: false
      Regression:
        include: false
      Assignment:
        include: true
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: "AdamW"
      GlobalGeneration:
        include: false
      ReconGeneration:
        include: false
      TruthGeneration:
        include: true
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: "AdamW"
        diffusion_steps: 200

    EarlyStopping:
      patience: 200
      min_delta: 0.0
      monitor: "val/loss"
      mode: "min"
      verbose: true

    EMA:
      enable: true               # Enable or disable EMA
      decay: 0.999               # EMA decay rate
      start_epoch: 0             # Start updating EMA after this epoch
      update_every_n_steps: 1    # Update EMA every N steps

      replace_model_after_load: true    # After loading checkpoint, copy EMA weights into model
      replace_model_at_end: false         # At training end, copy EMA weights into model (will not save EMA weights)

  Dataset:
    dataset_limit: 1.0
    normalization_file: "/pscratch/sd/a/avencast/Event_Level_Analysis/Pretrain_Parquet/HHML/train/normalization.pt"
    val_split: [ 0.7, 1.0 ]


network:
  default: configs/network-20M.yaml

  Body:
    PET:
      feature_drop: 0.0
  ReconGeneration:
    feature_drop: 0.0
  TruthGeneration:
    feature_drop: 0.0
  # overwrites
  # ...

event_info:
  default: configs/event_info.yaml

  # overwrites
  # ...

resonance:
  default: configs/resonance.yaml

  # overwrites
  # ...