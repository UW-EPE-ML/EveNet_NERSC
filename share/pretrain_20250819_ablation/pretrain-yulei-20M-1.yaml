platform:
  data_parquet_dir: "/pscratch/sd/a/avencast/Event_Level_Analysis/Pretrain_Parquet/run.20250808.2700M"
  number_of_workers: 512
  resources_per_worker: {
    "CPU": 30,
    "GPU": 1,
  }
  batch_size: 1024
  prefetch_batches: 2

logger:
  wandb:
    project: "Pretrain"
    entity: "ytchou97-university-of-washington"
    name: "Pretrain"
    run_name: &logger_name "nominal-20M-ablation-1"
    id: "nominal-20M-ablation-1-20250820"
    tags: [ "Pretrain", "NERSC", "Multi-Node", "500M-Data", "20M", "Ablation"]
    simplified: false
  local:
    save_dir: "/global/cfs/cdirs/m2616/avencast/Event_Level_Analysis/playground/logs"
    name: *logger_name
    version: "nominal-20M"


options:
  default: ../options/options.yaml

  Training:
    total_epochs: 50
    epochs: 50
    model_checkpoint_save_path: "/global/cfs/cdirs/m2616/avencast/Event_Level_Analysis/playground/checkpoints.20M.ablation.1"
#    model_checkpoint_load_path: "/global/cfs/cdirs/m2616/avencast/Event_Level_Analysis/playground/checkpoints.20M/epoch=14_train=0.4830_val=0.4822.ckpt"
    pretrain_model_load_path: null

    diffusion_every_n_epochs: 5 # how often to run diffusion
    diffusion_every_n_steps: 200 # how often to run diffusion inside the valid epoch
    eval_metrics_every_n_epochs: 5 # how often to run evaluation metrics

    learning_rate: &lr 0.000018
    #    learning_rate: &lr 0.000045
    learning_rate_warm_up_factor: 2.0
    weight_decay: &wd 0.001
    optimizer_type_base: &opt "lion"
    Components:
      GlobalEmbedding:
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      PET:
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      ObjectEncoder:
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      Classification:
        include: false
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      Regression:
        include: false
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      Assignment:
        include: false
      Segmentation:
        include: false
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
        use_full_mask: true
      GlobalGeneration:
        include: false
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      ReconGeneration:
        include: true
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt
      TruthGeneration:
        include: false
        warm_up: true
        learning_rate: *lr
        weight_decay: *wd
        optimizer_type: *opt

    ProgressiveTraining:
      stages:
        - name: "masking point prediction"
          epoch_ratio: 1.0
#          epoch_ratio: 0.0
          transition_ratio: 0.25
          loss_weights:
            generation-recon: [ 1.0, 1.0 ]
          train_parameters:
            noise_prob: [ 0.3, 1.0 ]
            reco_attn_mask: [ 1.0, 0.49 ]
            ema_decay: [ 0.5, 0.999 ]
    FAMO:
      turn_on: false

    EMA:
      update_every_n_steps: 1

    EarlyStopping:
      patience: 50
      min_delta: 0.0
      monitor: "val/loss"
      mode: "min"
      verbose: true

  Dataset:
    dataset_limit: 1.0
    normalization_file: "/pscratch/sd/a/avencast/Event_Level_Analysis/Pretrain_Parquet/run.20250808.2700M/normalization.pt"
    val_split: [ 0.7, 1.0 ]

  Metrics:
    Generation-Binning:
      "global-HT": [ 50, 2, 8 ]

network:
  default: ../pretrain-config/network-20M.yaml

  # overwrites
  # ...

event_info:
  default: ../event_info/multi_process.yaml

  # overwrites
  # ...

resonance:
  default: ../resonance/standard_model.yaml

  # overwrites
  # ...