max_neutrinos: 2

selections:
  aliases:
    n_lep: "INPUTS/Conditions/nLepton"
    n_bjet: "INPUTS/Conditions/nbJet"
    n_jet: "INPUTS/Conditions/nJet"

    is_lep: "INPUTS/Source/isLepton"
    is_bjet: "INPUTS/Source/btag"
    is_valid: "INPUTS/Source/MASK"

    pt: "INPUTS/Source/pt"

  selection_anchors:
    pT:
      lep: &lep_pT "np.min(np.where(is_lep.astype(bool), pt, np.inf), axis=-1) > 10"
      bjet: &bjet_pT "np.min(np.where(is_bjet.astype(bool), pt, np.inf), axis=-1) > 20"
      jet: &jet_pT "np.min(np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, np.inf), axis=-1) > 20"

    ordered_pT:
      lep1_pT_sel: &lep1_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 0) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 0, axis=-1)[:, 0] > 10)"
      lep2_pT_sel: &lep2_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 1) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 1, axis=-1)[:, 1] > 10)"
      lep3_pT_sel: &lep3_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 2) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 2, axis=-1)[:, 2] > 10)"
      lep4_pT_sel: &lep4_pT_sel "(np.sum(is_lep.astype(bool), axis=-1) > 3) & (-np.partition(-np.where(is_lep.astype(bool), pt, -np.inf), 3, axis=-1)[:, 3] > 10)"

      bjet1_pT_sel: &bjet1_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 0) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 0, axis=-1)[:, 0] > 20)"
      bjet2_pT_sel: &bjet2_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 1) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 1, axis=-1)[:, 1] > 20)"
      bjet3_pT_sel: &bjet3_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 2) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 2, axis=-1)[:, 2] > 20)"
      bjet4_pT_sel: &bjet4_pT_sel "(np.sum(is_bjet.astype(bool), axis=-1) > 3) & (-np.partition(-np.where(is_bjet.astype(bool), pt, -np.inf), 3, axis=-1)[:, 3] > 20)"

      jet1_pT_sel: &jet1_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 0) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 0, axis=-1)[:, 0] > 20)"
      jet2_pT_sel: &jet2_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 1) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 1, axis=-1)[:, 1] > 20)"
      jet3_pT_sel: &jet3_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 2) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 2, axis=-1)[:, 2] > 20)"
      jet4_pT_sel: &jet4_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 3) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 3, axis=-1)[:, 3] > 20)"
      jet6_pT_sel: &jet6_pT_sel "(np.sum((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, axis=-1) > 5) & (-np.partition(-np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, -np.inf), 5, axis=-1)[:, 5] > 20)"

  selections:
    #    Example:
    #      - "n_lep > 1"
    #      - "n_bjet > 1"
    #      - "np.min(np.where(is_lep, pt, np.inf), axis=-1) > 10"
    #      - "np.min(np.where(is_bjet, pt, np.inf), axis=-1) > 10"
    #      - "np.min(np.where((~is_bjet.astype(bool)) & (~is_lep.astype(bool)) & is_valid, pt, np.inf), axis=-1) > 10"

    QCD:
      - "n_jet >= 2"
      - *jet2_pT_sel
    QCD_2b:
      - "n_bjet >= 2"
      - *bjet2_pT_sel
    QCD_2b2j:
      - "(n_bjet >= 2) & (n_jet >= 4)"
      - *bjet2_pT_sel
      - *jet2_pT_sel
    QCD_4b:
      - "n_bjet >= 4"
      - *bjet4_pT_sel

    TTHadronics: &TTHadronics
      - "(n_bjet >= 2) & (n_jet >= 6)"
      - *bjet2_pT_sel
      - *jet4_pT_sel
    TTHadronics_mlm: *TTHadronics
    TT1L: &TT1L
      - "n_lep >= 1"
      - "(n_bjet >= 2) & (n_jet >= 4)"
      - *lep1_pT_sel
      - *bjet2_pT_sel
      - *jet2_pT_sel
    TT1L_mlm: *TT1L
    TT2L: &TT2L
      - "n_lep >= 2"
      - "n_bjet >= 2"
      - *lep2_pT_sel
      - *bjet2_pT_sel
    TT2L_mlm: *TT2L

    ttW_FullHadronics: &ttV_FullHadronics
      - "(n_bjet >= 2) & (n_jet >= 8)"
      - *bjet2_pT_sel
      - *jet6_pT_sel
    ttW_Leptonic:
      - "(n_bjet >= 2) & (n_lep >= 1) & (n_jet >= 6)"
      - *lep1_pT_sel
      - *bjet2_pT_sel
      - *jet4_pT_sel
    ttW_tHtLWH:
      - "(n_bjet >= 2) & (n_lep >= 1) & (n_jet >= 6)"
      - *bjet2_pT_sel
      - *lep1_pT_sel
      - *jet4_pT_sel
    ttW_tHtLWL:
      - "(n_bjet >= 2) & (n_lep >= 2) & (n_jet >= 4)"
      - *bjet2_pT_sel
      - *lep2_pT_sel
      - *jet2_pT_sel
    ttZ_FullHadronics: *ttV_FullHadronics
    ttZ_Leptonic:
      - "(n_bjet >= 2) & (n_lep >= 2) & (n_jet >= 6)"
      - *lep2_pT_sel
      - *bjet2_pT_sel
      - *jet4_pT_sel
    ttZ_tHtLZH:
      - "(n_bjet >= 2) & (n_lep >= 1) & (n_jet >= 6)"
      - *bjet2_pT_sel
      - *lep1_pT_sel
      - *jet4_pT_sel
    ttZ_tHtLZL:
      - "(n_bjet >= 2) & (n_lep >= 3) & (n_jet >= 4)"
      - *bjet2_pT_sel
      - *lep3_pT_sel
      - *jet2_pT_sel


    WJetsToQQ: &VJetsToQQ
      - "n_jet >= 2"
      - *jet2_pT_sel
    WJetsToLNu:
      - "n_lep >= 1"
      - *lep1_pT_sel
    ZJetsToQQ: *VJetsToQQ
    ZJetsToLL:
      - "n_lep >= 2"
      - *lep2_pT_sel

    WW_1L:
      - "n_lep >= 1"
      - "n_jet >= 2"
      - *lep1_pT_sel
      - *jet2_pT_sel
    WW_2L:
      - "n_lep >= 2"
      - *lep2_pT_sel
    ZZ_4L:
      - "n_lep >= 4"
      - *lep4_pT_sel
    ZZ_2L:
      - "n_lep >= 2"
      - "n_jet >= 2"
      - *lep2_pT_sel
      - *jet2_pT_sel
    WZ_1L:
      - "n_lep >= 1"
      - "n_jet >= 2"
      - *lep1_pT_sel
      - *jet2_pT_sel
    WZ_2L:
      - "n_lep >= 2"
      - "n_jet >= 2"
      - *lep2_pT_sel
      - *jet2_pT_sel
    WZ_3L:
      - "n_lep >= 3"
      - *lep3_pT_sel

    HWW_WpLepWmLep:
      - "n_lep >= 2"
      - *lep2_pT_sel

    HWW_WpHadWmHad:
      - "n_jet >= 4"
      - *jet4_pT_sel

    HWW_WpLepWmHad:
      - "n_lep >= 1"
      - "n_jet >= 2"
      - *lep1_pT_sel
      - *jet2_pT_sel

    HWW_WpHadWmLep:
      - "n_lep >= 1"
      - "n_jet >= 2"
      - *lep1_pT_sel
      - *jet2_pT_sel


process_info:
  default: process_info/pretrain.yaml

  # overwrites
  # ...

event_info:
  default: event_info/multi_process.yaml

  # overwrites
  # ...

resonance:
  default: resonance/standard_model.yaml

  # overwrites
  # ...